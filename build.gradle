import org.apache.tools.ant.taskdefs.condition.Os

buildscript {
	repositories {
		mavenLocal()
		mavenCentral()
		gradlePluginPortal()
	}
	dependencies {
		classpath 'com.github.johnrengelman:shadow:8.1.1'
	}
}

if(project.hasProperty('ossrhUser') && project.hasProperty("release")) {
	plugins {
		id("io.github.gradle-nexus.publish-plugin") version "1.3.0"
	}

	nexusPublishing {
		repositories {
			sonatype {
				username = ossrhUser
				password = ossrhPassword
			}
		}
	}
}

subprojects {
	apply plugin: "java-library"
	apply plugin: "signing"
	apply plugin: "maven-publish"
	
	repositories {
		mavenLocal()
		mavenCentral()
	}
	
	group = 'org.mini2Dx'
	version = '5.0.0-SNAPSHOT'

	java {
		sourceCompatibility = 1.7
		targetCompatibility = 1.7

		withJavadocJar()
		withSourcesJar()
	}
	
	// Maven Central publication
	if(project.hasProperty('ossrhUser')) {
		publishing {
			publications {
				mavenJava(MavenPublication) {
					from(components.java)

					pom {
						name = project.name
						description = project.description
						url = 'https://github.com/mini2Dx/tilepacker'
						licenses {
							license {
								name = 'The BSD 3-Clause License'
								url = 'https://opensource.org/licenses/BSD-3-Clause'
							}
						}
						developers {
							developer {
								id = 'tomcashman'
								name = 'Thomas Cashman'
								email = 'thomascashman404@gmail.com'
							}
						}
						scm {
							connection = 'scm:git:https://github.com/mini2Dx/tilepacker.git'
							developerConnection = 'scm:git:git@github.com:mini2Dx/tilepacker.git'
							url = 'https://github.com/mini2Dx/tilepacker.git'
						}
					}
				}
			}
		}

		signing {
			sign publishing.publications.mavenJava
		}
	}
}

project(":" + rootProject.name + "-core") {
	apply plugin: 'application'
	apply plugin: 'com.github.johnrengelman.shadow'

	application {
		mainClass = "org.tilepacker.core.TilePacker"
	}
	
	dependencies {
		implementation 'org.simpleframework:simple-xml:2.7.1'
		implementation fileTree(dir: 'lib', include: ['*.jar'])
	
		testImplementation 'org.jmock:jmock-junit4:2.5.1'
		testImplementation 'org.jmock:jmock-legacy:2.5.1'
		testImplementation 'junit:junit:4.8.2'
	}
	
	shadowJar {
		archiveBaseName.set(rootProject.name + "-core")
		archiveClassifier.set('')
		dependencies {
			exclude(dependency('org.simpleframework:simple-xml:2.7.1'))
		}
	}
	
	assemble.dependsOn shadowJar
	distTar.dependsOn shadowJar
	startScripts.dependsOn shadowJar
	startShadowScripts.dependsOn jar
}

project(":" + rootProject.name + "-gradle-plugin") {
	apply plugin: 'groovy'
	
	dependencies {
		implementation project(":" + rootProject.name + "-core")
		implementation gradleApi()
		implementation localGroovy()

		testImplementation 'org.jmock:jmock-junit4:2.5.1'
		testImplementation 'org.jmock:jmock-legacy:2.5.1'
		testImplementation 'junit:junit:4.8.2'
	}

	compileGroovy.dependsOn(":" + rootProject.name + "-core:shadowJar")
}
